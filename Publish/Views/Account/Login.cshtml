@using BMS.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LayoutWithoutHeader.cshtml";
}

<style>
    .retroshadow {
        font-family: "Avant Garde", Avantgarde, "Century Gothic", CenturyGothic, "AppleGothic", sans-serif;
        font-size: 35px;
        text-align: center;
        text-transform: uppercase;
        text-rendering: optimizeLegibility;
        text-shadow: 2px 2px 0px #d5d5d5, 3px 3px 0px rgba(0, 0, 0, 0.2);
    }
</style>
<div class="row">
    <div class="col-md-7" style="padding: 116px 40px">
        <h1 class="login-para retroshadow">Business Management System 2016</h1>
        <p class="login-para" style="font-size: 20px;">
            &nbsp;&nbsp;&nbsp;&nbsp;In BMS Technology , we are convinced that you have opportunities to make improvements . We believe the potential is related to your knowledge and the way you communicate. Realising the potential is dependent on your ability to collect, store and exchange information within the organization and with your customers and suppliers.
            <br />
            Login to get out of the most
        </p>
    </div>
    <div class="col-md-5">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h1 class="retroshadow">Login</h1>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.Kendo().TextBoxFor(x => x.Email).HtmlAttributes(new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        @Html.Kendo().TextBoxFor(x => x.Password).HtmlAttributes(new { type = "password", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <div class="checkbox">
                            @Html.Kendo().CheckBoxFor(x => x.RememberMe)
                        </div>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-10">
                        <input type="submit" value="Hit it!" class="k-button" />
                    </div>
                </div>
                <hr />
                <div class="form-group" style="text-align: center;">
                    @Html.ActionLink("Forgot your password?", "ForgotPassword")
                </div>
                @*<p>
                        @Html.ActionLink("Register as a new user", "Register")
                    </p>
                     Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
            }
        </section>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}