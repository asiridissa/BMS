@using BMS.Resource
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Area";
}

@(Html.Kendo().Grid<BMS.Entity.BMSTenant.Area>()
      .Name("gArea")
      .Columns(columns =>
      {
          columns.Bound(c => c.ShortName).Title(Resource.Short_Name).Width(250);
          columns.Bound(c => c.ShortName).Title(Resource.Full_Name);
          columns.Command(command => {command.Destroy().Text(Resource.Delete); }).Width(100);
      })
      .ToolBar(toolbar => {
          toolbar.Create().Text(Resource.Add);
          toolbar.Save().SaveText(Resource.Save).CancelText(Resource.Cancel);
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Pageable()
      .Navigatable()
      .Selectable(selectable => {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.MultipleColumn);
      })
      .Filterable()
      .DataSource(dataSource => dataSource
          .WebApi()
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Areas", action="GetAreas" })))
          .Create(create => create.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Areas", action = "PostArea" })))
          .Update(update => update.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Areas", action = "PutArea", id = "{0}" })))
          .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Areas", action = "DeleteArea", id = "{0}" })))
      )
      .Pageable(p=>p.Refresh(true))
)

