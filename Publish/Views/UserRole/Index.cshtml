@using BMS.Entity.BMSMaster
@using BMS.Resource

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            @(Html.Kendo().Grid<User>()
                  .Name("gUser")
                  .Columns(columns =>
                  {
                      columns.Bound(c => c.Email);
                      columns.Bound(c => c.EmailConfirmed);
                      columns.Bound(c => c.LockoutEnabled);
                      columns.Command(command => { command.Destroy().Text(Resource.Delete); }).Width(100);
                  })
                  .ToolBar(toolbar =>
                  {
                      toolbar.Create().Text(Resource.Add);
                      toolbar.Save().SaveText(Resource.Save).CancelText(Resource.Cancel);
                  })
                  .Editable(editable => editable.Mode(GridEditMode.InCell))
                  .Pageable()
                  .Navigatable()
                  .Selectable(selectable =>
                  {
                      selectable.Mode(GridSelectionMode.Single);
                      selectable.Type(GridSelectionType.Row);
                  })
                  .Sortable(sortable =>
                  {
                      sortable.SortMode(GridSortMode.MultipleColumn);
                  })
                  .Filterable()
                  .DataSource(dataSource => dataSource
                      .WebApi()
                      .PageSize(10)
                      .Model(m => m.Id(x => x.Id))
                      .Read(read => read.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Users", action = "GetUsers" })))
                      .Create(create => create.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Users", action = "PostUser" })))
                      .Update(update => update.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Users", action = "PutUser", id = "{0}" })))
                      .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Users", action = "DeleteUser", id = "{0}" })))
                  )
                  .Pageable(p => p.Refresh(true))
            )
        </div>
        <div class="col-md-6">
            <div id="grid"></div>

            <script>
                $(document).ready(function () {
                    $("#grid").kendoGrid({
                        dataSource: {
                            data: [{
                                Id: 1,
                                Check : true,
                                Name: "SAdmin"
                            }, {
                                Id: 2,
                                Check : false,
                                Name: "Admin"
                            }, {
                                Id: 3,
                                Check : false,
                                Name: "Accountant"
                            }]
                            ,
                            schema: {
                                model: {
                                    fields: {
                                        Check: { Check: "boolean" },
                                        Id: { type: "number" },
                                        Name: { type: "string" }
                                    }
                                }
                            },
                            pageSize: 20
                        },
                        scrollable: false,
                        pageable: {
                            refresh: true
                        },
                        columns: [
                            { field: "Check", title: "", tempate:"<input type=\"checkbox\" />"},
                            { field: "Name"}
                        ]
                    });
                });
            </script>

            @*@(Html.Kendo().Grid<Role>().Name("gRoles").Columns(columns =>
                {
                    columns.Bound(x => x.Name).ClientTemplate(@<text>
                                                                  <input type="checkbox" />
                                                               </text>);
                    columns.Bound(c => c.Name);
                    columns.Command(command => { command.Destroy().Text(Resource.Delete); }).Width(100);
                })
                    //.ToolBar(toolbar =>
                    //{
                    //    toolbar.Create()..Text(Resource.Add);
                    //    toolbar.Save().SaveText(Resource.Save).CancelText(Resource.Cancel);
                    //})
                    .Editable(editable => editable.Mode(GridEditMode.InCell)).Pageable().Navigatable().Selectable(selectable =>
                    {
                        selectable.Mode(GridSelectionMode.Single);
                        selectable.Type(GridSelectionType.Row);
                    }).Sortable(sortable =>
                    {
                        sortable.SortMode(GridSortMode.MultipleColumn);
                    }).Filterable().DataSource(dataSource => dataSource
                        .WebApi()
                        .Batch(false)
                        .PageSize(10)
                        .Model(m => m.Id(x => x.Id))
                        .Read(read => read.Url(Url.HttpRouteUrl("ActionApi", new { controller = "UserRoles", action = "GetUserRoles" })))
                        .Create(create => create.Url(Url.HttpRouteUrl("ActionApi", new { controller = "UserRoles", action = "PostUserRole" })))
                        .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("ActionApi", new { controller = "UserRoles", action = "DeleteUserRole", id = "{0}" })))
                    ).Pageable(p => p.Refresh(true)))*@
        </div>
    </div>
</div>
