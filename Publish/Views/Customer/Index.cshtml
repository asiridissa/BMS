@using System.Collections
@using BMS.Resource
@{
    ViewBag.Title = Resource.Customer;
}

@(Html.Kendo().Grid<BMS.Entity.BMSTenant.Customer>()
      .Name("gCustomer")
      .Columns(columns =>
      {
          columns.Bound(c => c.ShortName).Title(Resource.Short_Name).Width(140);
          columns.Bound(c => c.FullName).Title(Resource.Full_Name);
          columns.ForeignKey(x => x.AreaId, (IEnumerable)ViewData["Areas"], "Id", "ShortName").Width(140).Title(@Resource.Area);
          columns.Bound(c => c.Phone).Title(Resource.Phone).Width(140);
          columns.Bound(c => c.Mobile).Title(Resource.Mobile).Width(140);
          columns.Command(command =>
          {
              command.Edit().UpdateText(Resource.Save).CancelText(Resource.Cancel);
              command.Destroy().Text(Resource.Delete);
          }).Width(180);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create().Text(Resource.Add);
      })
      .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("Customer").Window(w => w.Width(800)))
      .Pageable()
      .Groupable()
      .Navigatable()
      .Selectable(selectable =>
      {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.MultipleColumn);
      })
      .Filterable()
      .ClientDetailTemplateId("gCustomerDetails")
      .DataSource(dataSource => dataSource
          .WebApi()
          .ServerOperation(true)
          .PageSize(10)
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Customers", action = "GetCustomers" })))
          .Create(create => create.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Customers", action = "PostCustomer" })))
          .Update(update => update.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Customers", action = "PutCustomer", id = "{0}" })))
          .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Customers", action = "DeleteCustomer", id = "{0}" })))
      )
      .Pageable(p => p.Refresh(true).PageSizes(new[] {10,25,50,100}))
)

<script id="gCustomerDetails" type="text/kendo-tmpl">
    <div class="container">
        <div class="row">
            <div class="col-md-2">@Resource.Mobile</div>
            <div class="col-md-3">#if (Mobile == null) {# #=''# #} else {# #=Mobile# #}#</div>
            <div class="col-md-2">@Resource.Email</div>
            <div class="col-md-3">#if (Email == null) {# #=''# #} else {# #=Email# #}#</div>
        </div>
        <div class="row">
            <div class="col-md-2">@Resource.Address</div>
            <div class="col-md-3"><pre>#if (Address == null) {# #=''# #} else {# #=Address# #}#</pre></div>
            <div class="col-md-2">@Resource.Fax</div>
            <div class="col-md-3">#if (Fax == null) {# #=''# #} else {# #=Fax# #}#</div>
        </div>
    </div>
</script>