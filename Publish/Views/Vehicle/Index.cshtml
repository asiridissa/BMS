@{
    ViewBag.Title = "Vehicle";
}

@(Html.Kendo().Grid<BMS.Entity.BMSTenant.Vehicle>()
      .Name("gVehicle")
      .Columns(columns =>
      {
          columns.Bound(c => c.No).Width(250);
          columns.Bound(c => c.Description);
          columns.Command(command => { command.Destroy(); }).Width(100);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create().Text("Add");
          toolbar.Save().SaveText("Save").CancelText("Cancel");
      })
      .Editable(editable => editable.Mode(GridEditMode.InCell))
      .Pageable()
      .Navigatable()
      .Selectable(selectable =>
      {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.MultipleColumn);
      })
      .Filterable()
      .DataSource(dataSource => dataSource
          .WebApi()
          .PageSize(15)
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Vehicles", action = "GetVehicles" })))
          .Create(create => create.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Vehicles", action = "PostVehicle" })))
          .Update(update => update.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Vehicles", action = "PutVehicle", id = "{0}" })))
          .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("ActionApi", new { controller = "Vehicles", action = "DeleteVehicle", id = "{0}" })))
      )
      .Pageable(p => p.Refresh(true))
)

