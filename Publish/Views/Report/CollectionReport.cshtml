@using BMS.Entity
@using BMS.Reporting
@using BMS.Resource
@using BMS.Web.Models
@{
    ViewBag.Title = Resource.Collection_Report;
    var entity = User.GetSelectedEntity(Convert.ToInt32(Request.Cookies[Key.Entity]?.Value));
}

<script src="@Url.Content("~/ReportViewer/js/telerikReportViewer-12.0.18.125.min.js")"></script>

<div id="report-filters" class="container-fluid">
    <div class="row">
        <label class="col-md-1">From </label>
        <div class="col-md-2">
            @Html.Kendo().DatePicker().Name("dpBillFromDate").Max(DateTime.Now).Value((DateTime?)ViewData["Date"] ?? DateTime.Today).Events(e => e.Change("refreshViewer")).Deferred()
        </div>
        <label class="col-md-1">To </label>
        <div class="col-md-2">
            @Html.Kendo().DatePicker().Name("dpBillToDate").Max(DateTime.Now).Value((DateTime?)ViewData["Date"] ?? DateTime.Today).Events(e => e.Change("refreshViewer")).Deferred()
        </div>
        <div class="col-md-2">
            @Html.Kendo().CheckBox().Name("show-summary").Label("Summary").Deferred()
        </div>
        <div class="col-md-2">
            @Html.Kendo().CheckBox().Name("show-only-summary").Label("Summary Only").Deferred()
        </div>
    </div>
</div>

<div id="reportViewer">
    <img style="margin: auto" src="~/Content/kendo/BlueOpal/loading-image.gif" />
</div>


@Html.Kendo().DeferredScripts()

@{

    var typeReportSource = new TypeReportSource() { TypeName = typeof(CollectionReport).AssemblyQualifiedName };
    typeReportSource.Parameters.Add("CompanyName", entity.Name);
    typeReportSource.Parameters.Add("FromDate", (DateTime?)ViewData["Date"] ?? DateTime.Today);
    typeReportSource.Parameters.Add("ToDate", (DateTime?)ViewData["Date"] ?? DateTime.Today);
    typeReportSource.Parameters.Add("ShowSummary", false);
    typeReportSource.Parameters.Add("ShowDetails", true);
}

@(Html.TelerikReporting().ReportViewer()
              .Id("reportViewer")
              .ServiceUrl(Url.HttpRouteUrl("DefaultApi", new { controller = "Reports" }))
              .ReportSource(typeReportSource)
              .ViewMode(ViewMode.PrintPreview)
              .ScaleMode(ScaleMode.Specific)
              .Scale(1.0)
              .PersistSession(false)
              .PrintMode(PrintMode.AutoSelect)
              .EnableAccessibility(false)
              .ClientEvents(e => e.Error("function () { notify('Something went Wrong', 'warning');}"))
              .ClientEvents(e => e.RenderingEnd("onRenderingEnd"))
              .Deferred()
)

@Html.TelerikReporting().DeferredScripts()

<script>
    var onRenderingEnd = function() {
        @if ((bool?)ViewData["Print"] == true)
        {
            @:$("#reportViewer").data("telerik_ReportViewer").commands.print.exec();
        }
    }

    var refreshViewer = function () {
        var viewer = $("#reportViewer").data("telerik_ReportViewer");

        viewer.reportSource({
            report: viewer.reportSource().report,
            parameters: {
                FromDate: $('#dpBillFromDate').val(),
                ToDate: $('#dpBillToDate').val(),
                CompanyName: '@entity.Name',
                ShowSummary: $('#show-summary').prop('checked') || $('#show-only-summary').prop('checked'),
                ShowDetails: !$('#show-only-summary').prop('checked')
            }
        }).refreshReport();
    };

    $(document).ready(function () {
        $('#show-summary,#show-only-summary')
            .change(function () {
                refreshViewer();
            });
    });
</script>
